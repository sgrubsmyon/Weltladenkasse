<?xml version="1.0" encoding="UTF-8"?>
<!--<project name="Weltladenkasse" default="jar" basedir=".">-->
<project name="Weltladenkasse" default="debug-jar" basedir=".">
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="build-resources" location="build/resources"/>
    <property name="lib" location="lib"/>
    <property name="resources" location="resources"/>
    <property name="jarfile-kasse" location="Weltladenkasse_v1.1.1.jar"/>
    <property name="jarfile-besteller" location="Weltladenbesteller_v1.1.1.jar"/>

    <!-- with a little help from: https://ant.apache.org/manual/tutorial-HelloWorldWithAnt.html -->
    <path id="classpath">
        <fileset dir="${lib}" includes="**/*.jar"/>
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="copy" depends="init" description="copy the resources">
        <copy todir="${build-resources}">
            <fileset dir="${resources}"/>
                                 <!-- excludes="**/*.java" -->
        </copy>
    </target>

    <target name="convert" depends="copy" description="convert properties files">
        <native2ascii encoding="UTF-8" src="." dest="." includes="config.txt" ext=".properties"/>
        <native2ascii encoding="UTF-8" src="." dest="." includes="config_local.txt" ext=".properties"/>
        <native2ascii encoding="UTF-8" src="." dest="." includes="config_Windows.txt" ext=".properties"/>
    </target>

    <target name="compile" depends="convert" description="compile the source">
        <javac srcdir="${src}" destdir="${build}" includeantruntime="false"
            classpathref="classpath"/>
    </target>

    <target name="debug-compile" depends="convert" description="compile the source in debugging mode">
        <javac srcdir="${src}" destdir="${build}" debug="on" debuglevel="lines,vars,source"
            includeantruntime="false" classpathref="classpath">
            <compilerarg value="-Xlint:unchecked"/>
        </javac>
    </target>

    <target name="jar" depends="compile" description="generate the distribution .jar file">
        <!-- destfile="Weltladenkasse-${DSTAMP}.jar" -->
        <jar destfile="${jarfile-kasse}" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="org.weltladen_bonn.pos.kasse.Kasse"/>
            </manifest>
            <!-- with this solution, the external jars in lib are (unzipped? and?) included in the
                 program's jar http://stackoverflow.com/questions/183292/classpath-including-jar-within-a-jar -->
            <!-- might need to unjar (jar xvf file.jar), delete all
                 META-INF/*.SF, META-INF/*.DSA, META-INF/*.RSA files (or
                 META-INF dir entirely) and recreate jar (jar cvf file.jar *) -->
            <zipgroupfileset dir="${lib}"/>
        </jar>
        <jar destfile="${jarfile-besteller}" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="org.weltladen_bonn.pos.besteller.Besteller"/>
            </manifest>
            <zipgroupfileset dir="${lib}"/>
        </jar>
    </target>

    <target name="debug-jar" depends="debug-compile,jar" description="generate the distribution .jar file, with debug compile">
    </target>

    <target name="develop" depends="debug-compile" description="for development (faster): only debug compile, no jar creation">
    </target>

    <target name="clean">
        <delete dir="${build}"/>
        <delete file="${jarfile-kasse}"/>
        <delete file="${jarfile-besteller}"/>
    </target>
</project>
